/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.gson.Gson;
import com.google.gson.internal.$Gson$Preconditions;

import java.io.*;
import java.net.HttpURLConnection;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;

public class App {
    public String getGreeting() {
        return "Hello world.";
    }
    public static void main(String[] args) throws IOException {
        Quote[] quotes = gsonify("src/main/resources/happyFile.json");
        int indici = (int)(Math.random()*quotes.length);
        try {
            addQuote(quotes, getStarWarsQuote(),"src/main/resources/happyFile.json");
            System.out.println(quotes[quotes.length-1].toString());
        }catch (Exception e){
            System.out.println(random(quotes).toString());
        }

    }



        public static String getStarWarsQuote() throws IOException {
        URL starWarsQuotesAPIURL= new URL("http://swquotesapi.digitaljedi.dk/api/SWQuote/RandomStarWarsQuote");
//        opens a new connection to Star Wars Data
        HttpURLConnection connection = (HttpURLConnection) starWarsQuotesAPIURL.openConnection();
//        take in the new data
        BufferedReader reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
//       build the new string from incoming data
        StringBuilder data =new StringBuilder();
        String line = reader.readLine();
        while(line != null) {
            data.append(line);
            line = reader.readLine();
        }
        data.toString();
//        modify the quote to match expected field in or json
//        https://stackoverflow.com/questions/40910779/how-to-remove-all-characters-before-a-specific-character-in-java/40910835
        String modData = data.substring(data.indexOf(",")+1);
        modData = modData.replace("\"starWarsQuote\"", "{\"text\"");
        return modData;
        }


//    Method that
        public static void  addQuote (Quote[] arr, String newQoute, String filePath) throws IOException {
//            make a new quote array with the  new quote
        Quote[] extendedQuoteArray = new Quote [arr.length+1];
                for(int i = 0; i<arr.length;i++) {
                    extendedQuoteArray[i]=arr[i];
                }
            Gson gson = new Gson();
            Quote quoteToAdd = gson.fromJson(newQoute, Quote.class);
            extendedQuoteArray[extendedQuoteArray.length-1] = quoteToAdd;
//
//            Write the new data to a new File
            FileOutputStream quotesToJson = new FileOutputStream(filePath);
            quotesToJson.write(gson.toJson(extendedQuoteArray).getBytes());
            quotesToJson.close();
        }



//    Method to parse a Json file in to an array of Quotes
        public static Quote[] gsonify(String filePath) throws IOException {
            Gson gson = new Gson();
//            Creates a new array of type Quotes then for each Json object an array index is created and a quote is inserted at that index.
            Quote[] quoteArr = gson.fromJson(new String(Files.readAllBytes(Paths.get(filePath))), Quote[].class);
            return quoteArr;
    }


//    Method that returns a random quote
        public static Quote random(Quote[] arr){
            int indici = (int)(Math.random()*arr.length);
            return arr[indici];
        }
}
